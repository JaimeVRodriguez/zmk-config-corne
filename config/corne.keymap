/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bhm: bhm {
            compatible = "zmk,behavior-hold-tap";
            label = "BHM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE     &kp Q              &kp W                &kp E            &kp R                &kp T      &kp Y      &kp U                 &kp I             &kp O                 &kp P                       &kp LBKT
&kp LS(LPAR)  &bhm LEFT_SHIFT A  &bhm LEFT_CONTROL S  &bhm LEFT_ALT D  &bhm LEFT_COMMAND F  &kp G      &kp H      &bhm RIGHT_COMMAND J  &bhm RIGHT_ALT K  &bhm RIGHT_CONTROL L  &bhm RIGHT_SHIFT SEMICOLON  &kp SQT
&kp LS(RPAR)  &kp Z              &kp X                &kp C            &kp V                &kp B      &kp N      &kp M                 &kp COMMA         &kp DOT               &lt 3 SLASH                 &kp RBKT
                                                      &kp ESC          &lt 5 SPACE          &kp TAB    &lt 2 RET  &lt 4 BACKSPACE       &lt 1 DELETE
            >;
        };

        function {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp F9  &kp F10  &kp F11  &kp F12    &kp PRINTSCREEN    &none    &none            &none              &none          &none          &none
&none  &kp F5  &kp F6   &kp F7   &kp F8     &kp SCROLLLOCK     &none    &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_WIN  &trans
&none  &kp F1  &kp F2   &kp F3   &kp F4     &kp PAUSE_BREAK    &trans   &trans           &trans             &trans         &trans         &trans
                        &none    &kp SPACE  &kp TAB            &kp RET  &trans           &lt 1 DELETE
            >;

            label = "function";
        };

        symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none          &none              &none            &none
&none  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &none             &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &none
&none  &kp GRAVE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &none             &none              &none          &none              &none            &none
                                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS          &none             &trans             &none
            >;

            label = "symbol";
        };

        button {
            bindings = <
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_UNDO    &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO  &kp BSPC
&trans  &kp LSHFT   &kp LCTRL  &kp LALT    &kp LGUI     &kp K_CUT     &none       &kp RGUI     &kp RALT    &kp RCTRL  &kp RSHFT   &none
&trans  &trans      &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_REDO    &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &none       &trans
                               &trans      &trans       &trans        &none       &none        &none
            >;

            label = "button";
        };

        num {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8      &kp N9        &kp LBRC         &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5      &kp N6        &kp EQUAL        &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2      &kp N3        &kp BACKSLASH    &trans  &trans     &trans     &trans    &trans    &trans
                           &kp PERIOD  &kp NUMBER_0  &kp MINUS        &trans  &trans     &trans
            >;

            label = "num";
        };

        navigation {
            bindings = <
&trans  &trans     &trans     &trans    &bt BT_PRV  &bt BT_NXT    &kp K_REDO      &kp K_PASTE      &kp K_COPY    &kp K_CUT       &kp K_UNDO    &kp BSPC
&trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI    &trans        &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp CAPSLOCK  &kp EQUAL
&trans  &trans     &trans     &trans    &trans      &trans        &trans          &kp HOME         &kp PG_DN     &kp PG_UP       &kp END       &kp RSHFT
                              &trans    &trans      &trans        &kp RET         &kp BSPC         &kp DEL
            >;

            label = "navigation";
        };
    };
};
