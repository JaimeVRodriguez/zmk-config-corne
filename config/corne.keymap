/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bhm: bhm {
            compatible = "zmk,behavior-hold-tap";
            label = "BHM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
        };

        bracket_td_L: bracket_td_L {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET_TD_L";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET>,
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACE>;
        };

        quote_TD: quote_TD {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTE_TD";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>, <&kp GRAVE>;
        };

        colon_TD: colon_TD {
            compatible = "zmk,behavior-tap-dance";
            label = "COLON_TD";
            #binding-cells = <0>;
            bindings = <&bhm LEFT_SHIFT SEMICOLON>, <&kp COLON>;

            tapping-term-ms = <150>;
        };

        bracket_TD_R: bracket_TD_R {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET_TD_R";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_BRACKET>,
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACE>;
        };

        slash_TD: slash_TD {
            compatible = "zmk,behavior-tap-dance";
            label = "SLASH_TD";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LEFT_BRACKET  &kp Q              &kp W                &kp E            &kp R                &kp T      &kp Y      &kp U             &kp I             &kp O                 &kp P          &kp RIGHT_BRACKET
&kp BACKSLASH     &bhm LEFT_SHIFT A  &bhm LEFT_CONTROL S  &bhm LEFT_ALT D  &bhm LEFT_COMMAND F  &kp G      &kp H      &bhm RIGHT_GUI J  &bhm RIGHT_ALT K  &bhm RIGHT_CONTROL L  &kp SEMICOLON  &kp SQT
&kp MINUS         &kp Z              &kp X                &kp C            &kp V                &kp B      &kp N      &kp M             &kp COMMA         &kp DOT               &kp SLASH      &kp EQUAL
                                                          &kp ESC          &lt 4 SPACE          &kp TAB    &lt 2 RET  &lt 3 BACKSPACE   &lt 1 DELETE
            >;
        };

        function {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none       &kt PRINTSCREEN  &kp F7  &kp F8  &kp F9     &kp F10    &none    &none       &none         &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0
&none       &kp SCROLLLOCK   &kp F4  &kp F5  &kp F6     &kp F11    &none    &kp RGUI    &kp RALT      &kp LCTRL     &kp RSHFT     &trans
&bt BT_CLR  &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3     &kp F12    &trans   &kp LS(F1)  &trans        &trans        &trans        &trans
                                     &none   &kp SPACE  &kp TAB    &kp RET  &trans      &lt 1 DELETE
            >;

            label = "function";
        };

        symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_BRACE         &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none          &none              &none            &none
&kp MINUS  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &none             &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &none
&none      &kp GRAVE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &none             &none              &none          &none              &none            &none
                                            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS          &none             &trans             &none
            >;

            label = "symbol";
        };

        num {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8      &kp N9        &kp LBRC         &trans  &trans    &trans    &trans     &trans     &trans
&trans  &kp SEMI   &kp N4  &kp N5      &kp N6        &kp EQUAL        &trans  &kp RGUI  &kp RALT  &kp LCTRL  &kp RSHFT  &trans
&trans  &kp GRAVE  &kp N1  &kp N2      &kp N3        &kp BACKSLASH    &trans  &trans    &trans    &trans     &trans     &trans
                           &kp PERIOD  &kp NUMBER_0  &kp MINUS        &trans  &trans    &trans
            >;

            label = "num";
        };

        navigation {
            bindings = <
&none   &none      &kp LG(F7)  &kp RC(RS(R))  &kp RC(R)      &kp RG(RS(T))    &kp RS(RG(LEFT_BRACKET))  &kp RA(UP_ARROW)  &kp UP_ARROW      &kp RA(DOWN)       &kp RS(RG(RIGHT_BRACKET))   &kp RG(RS(O))
&trans  &kp LSHFT  &kp LCTRL   &kp LALT       &kp RS(F6)     &kp LC(G)        &kp RA(F12)               &kp LEFT          &kp DOWN          &kp RIGHT          &kp LG(LS(BACKSPACE))       &kp LG(LS(F12))
&trans  &trans     &kp LG(P)   &kp RS(RG(U))  &kp RG(RA(V))  &kp LG(B)        &kp RG(RA(N))             &kp RG(RA(M))     &kp RC(RS(LEFT))  &kp RC(RS(RIGHT))  &kp LG(LC(LA(LEFT_ARROW)))  &kp LA(LC(LG(RIGHT)))
                               &trans         &trans         &trans           &kp RET                   &kp BSPC          &kp DEL
            >;

            label = "navigation";
        };
    };
};
