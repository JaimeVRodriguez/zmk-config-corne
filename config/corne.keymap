/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bhm: bhm {
            compatible = "zmk,behavior-hold-tap";
            label = "BHM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
        };

        bracket_td_L: bracket_td_L {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET_TD_L";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET>,
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACE>;
        };

        quote_TD: quote_TD {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTE_TD";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>, <&kp GRAVE>;
        };

        colon_TD: colon_TD {
            compatible = "zmk,behavior-tap-dance";
            label = "COLON_TD";
            #binding-cells = <0>;
            bindings = <&bhm LEFT_SHIFT SEMICOLON>, <&kp COLON>;

            tapping-term-ms = <150>;
        };

        bracket_TD_R: bracket_TD_R {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET_TD_R";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_BRACKET>,
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACE>;
        };

        slash_TD: slash_TD {
            compatible = "zmk,behavior-tap-dance";
            label = "SLASH_TD";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W                &kp E            &kp R                &kp T         &kp Y      &kp U             &kp I             &kp O                 &kp P      &kp MINUS
&kp BACKSLASH   &kp A  &bhm LEFT_CONTROL S  &bhm LEFT_ALT D  &bhm LEFT_COMMAND F  &kp G         &kp H      &bhm RIGHT_GUI J  &bhm RIGHT_ALT K  &bhm RIGHT_CONTROL L  &kp SEMI   &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X                &kp C            &kp V                &kp B         &kp N      &kp M             &kp COMMA         &kp DOT               &kp SLASH  &kp RIGHT_SHIFT
                                            &lt 4 ESCAPE     &mo 1                &kp RETURN    &kp SPACE  &lt 2 BACKSPACE   &lt 3 DELETE
            >;
        };

        number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none
&none  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                   &none         &none         &none           &none         &none         &none
            >;

            label = "function";
        };

        symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bhm TILDE GRAVE  &kp EXCLAMATION  &bhm AT_SIGN UP_ARROW  &kp POUND        &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&none             &kp LEFT_ARROW   &kp DOWN_ARROW         &kp RIGHT_ARROW  &none       &none          &none      &none          &none         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH
&kp LEFT_SHIFT    &none            &none                  &none            &none       &none          &none      &none          &none         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RIGHT_SHIFT
                                                          &none            &none       &none          &none      &trans         &none
            >;

            label = "symbol";
        };

        shortcut {
            bindings = <
&trans  &none                               &bhm LA(UP_ARROW) LA(LS(UP_ARROW))      &none                                 &kp LC(LS(R))  &kp LG(LS(T))    &trans      &trans       &trans  &bhm LC(LA(O)) LG(LS(O))  &trans  &trans
&trans  &bhm LG(LEFT_ARROW) LA(LEFT_ARROW)  &bhm LA(DOWN_ARROW) LA(LS(DOWN_ARROW))  &bhm LG(RIGHT_ARROW) LA(RIGHT_ARROW)  &none          &none            &kp LS(F6)  &kp LA(F12)  &none   &kp LG(LA(L))             &none   &trans
&trans  &none                               &none                                   &none                                 &none          &none            &trans      &trans       &trans  &trans                    &trans  &kp RIGHT_SHIFT
                                                                                    &none                                 &none          &none            &trans      &trans       &trans
            >;

            label = "num";
        };

        navigation {
            bindings = <
&bt BT_CLR  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 4  &none  &none    &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none  &none    &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none  &none    &none  &none  &none  &none  &none  &none
                                        &none         &none  &none    &none  &none  &none
            >;

            label = "navigation";
        };
    };
};
